,mean_fit_time,mean_score_time,mean_test_score,mean_train_score,param_clf,param_import__remove,param_reduce_dim,param_vect__analyzer,param_vect__min_df,params,rank_test_score,split0_test_score,split0_train_score,split1_test_score,split1_train_score,split2_test_score,split2_train_score,split3_test_score,split3_train_score,split4_test_score,split4_train_score,std_fit_time,std_score_time,std_test_score,std_train_score
0,10.47670521736145,0.23584866523742676,0.974429416737109,0.9792371806528776,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",2,0.9704329461457233,0.9796565389696169,0.9736008447729673,0.9801849405548216,0.9767687434002112,0.9778071334214002,0.9714587737843552,0.9807184363444268,0.9798941798941799,0.977818853974122,0.6613325877967833,0.00785617412964206,0.003486695786747223,0.001210364763633185
1,8.70415439605713,0.23244996070861818,0.9729501267962807,0.9781276210642937,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",6,0.9693769799366421,0.9780713342140026,0.9725448785638859,0.9785997357992074,0.9757127771911299,0.9770145310435931,0.96723044397463,0.9791336502905441,0.9798941798941799,0.977818853974122,1.0970851978615526,0.008799945599647857,0.004503917532615689,0.0007172812344770486
2,94.79572005271912,21.666940116882323,0.9748520710059172,0.9787614099416653,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",1,0.9714889123548046,0.978335535006605,0.9809926082365364,0.9762219286657859,0.9757127771911299,0.9791281373844122,0.9682875264270613,0.9799260433174855,0.9777777777777777,0.9801954053340375,1.1461363004960743,1.1569711260163564,0.004503587992094328,0.0014267121162685236
3,93.82519426345826,21.667118549346924,0.9733727810650887,0.9787084442021088,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",4,0.9725448785638859,0.9788639365918098,0.9757127771911299,0.9751651254953765,0.9746568109820486,0.9780713342140026,0.9661733615221987,0.9801901743264659,0.9777777777777777,0.9812516503828889,0.7081040763508712,1.1092496736136845,0.003974914219697393,0.002080798708047662
4,13.013723230361938,0.3079634189605713,0.9661876584953508,0.9693049053704907,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",12,0.9630411826821542,0.971994715984148,0.9619852164730729,0.968560105680317,0.9704329461457233,0.9688243064729194,0.9608879492600423,0.9696249339672478,0.9746031746031746,0.9675204647478215,2.38544651287285,0.010905221365832671,0.005374074595917831,0.0015038237699110464
5,9.426198577880859,0.28327460289001466,0.9666103127641589,0.968934968478175,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",11,0.9662090813093981,0.9733157199471598,0.9640971488912354,0.9701453104359313,0.9704329461457233,0.9645970937912813,0.9608879492600423,0.9675118858954042,0.9714285714285714,0.9691048323210985,2.207469169599181,0.008816610041378169,0.003924684793894651,0.002881912061442172
6,14.869979810714721,21.822289514541627,0.9714708368554522,0.971893654509971,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",7,0.9651531151003168,0.9749009247027741,0.9746568109820486,0.9690885072655218,0.9788806758183738,0.9730515191545575,0.9640591966173362,0.9722662440570523,0.9746031746031746,0.9701610773699498,2.06254388512493,1.0640664467994976,0.005826534491328655,0.0020685174462626503
7,11.260381078720092,21.6619704246521,0.9685122569737954,0.973267191642534,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",8,0.9640971488912354,0.9751651254953765,0.9651531151003168,0.9717305151915456,0.9746568109820486,0.9733157199471598,0.9651162790697675,0.973851030110935,0.9735449735449735,0.9722735674676525,1.3604426832284677,1.153690357920495,0.004591177751062247,0.0012078111424582393
8,9.487595510482787,0.1948455810546875,0.9731614539306847,0.976912353267333,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",5,0.9683210137275607,0.978335535006605,0.9767687434002112,0.9738441215323645,0.9746568109820486,0.9772787318361955,0.9693446088794926,0.9764923402007396,0.9767195767195768,0.9786110377607605,0.6060248145302649,0.009714005513244703,0.003630610726551321,0.0017108866404590794
9,7.33363709449768,0.1926783561706543,0.974006762468301,0.9765424582083362,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",3,0.9693769799366421,0.9770145310435931,0.9767687434002112,0.9751651254953765,0.9746568109820486,0.9754293262879788,0.9682875264270613,0.9762282091917591,0.9809523809523809,0.9788750990229733,0.40554170869962125,0.009319429140337367,0.004698313961486932,0.0013340859380583786
10,77.8349428653717,17.457810354232787,0.9653423499577346,0.9688821283122836,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",13,0.9630411826821542,0.9706737120211361,0.9736008447729673,0.9653896961690885,0.9609292502639916,0.9714663143989432,0.959830866807611,0.968040147913365,0.9693121693121693,0.9688407710588857,1.570227208159379,1.1785112341458643,0.005275078397959906,0.002135205545407941
11,77.89255614280701,17.475786447525024,0.9649196956889264,0.9685651152819805,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",14,0.9640971488912354,0.969881109643329,0.9725448785638859,0.9667107001321004,0.9588173178458289,0.9701453104359313,0.9619450317124736,0.9669836238774432,0.9671957671957672,0.9691048323210985,1.5867661182022963,1.2455455379819569,0.004693349251488507,0.0014463832809262732
12,11.244419193267822,0.24850816726684571,0.9678782755705833,0.9713121476916747,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",10,0.9588173178458289,0.9751651254953765,0.9693769799366421,0.9677675033025099,0.9736008447729673,0.969881109643329,0.9630021141649049,0.9698890649762282,0.9746031746031746,0.9738579350409295,2.0616552627571014,0.013206209808039797,0.006100710970558652,0.00275550392269355
13,10.361297941207885,0.23434338569641114,0.9683009298393914,0.9718933615072093,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': 'word'}",9,0.9567053854276664,0.9730515191545575,0.9788806758183738,0.9714663143989432,0.9714889123548046,0.9701453104359313,0.9651162790697675,0.971473851030111,0.9693121693121693,0.9733298125165039,1.4529438573981646,0.009720222402189473,0.007319458486983664,0.001167798052668711
14,13.10184268951416,17.50799231529236,0.9630177514792899,0.963863108646082,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",15,0.9545934530095037,0.9675033025099076,0.9725448785638859,0.9603698811096433,0.9598732840549102,0.9645970937912813,0.9556025369978859,0.9630216587427364,0.9724867724867725,0.9638236070768418,1.0090669932509493,1.1929484009355846,0.00795265143630234,0.002310929791004183
15,9.690282917022705,17.545274877548216,0.9598478444632291,0.9633350698546319,"LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=1000, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",16,0.9514255543822597,0.9696169088507266,0.9725448785638859,0.9606340819022458,0.9535374868004224,0.9635402906208719,0.9556025369978859,0.9619651347068146,0.9661375661375662,0.9609189331925007,1.456527241819357,1.2212025124042953,0.008119849485754591,0.0033019203907425554
16,0.7386674880981445,0.23861660957336425,0.9551986475063398,0.9569421781755617,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",17,0.9503695881731784,0.9587846763540291,0.955649419218585,0.9571994715984148,0.955649419218585,0.9561426684280053,0.9566596194503171,0.9558901215002641,0.9576719576719577,0.9566939529970954,0.005544667386251951,0.0089650357844059,0.0025291499421510205,0.0010265139323749732
17,0.6550858020782471,0.23147115707397461,0.952240067624683,0.9551986901792173,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",18,0.9461457233368532,0.9577278731836195,0.9472016895459345,0.9553500660501981,0.9535374868004224,0.9537648612945839,0.9577167019027484,0.9535129424194401,0.9566137566137566,0.955637707948244,0.010065517155973662,0.009688370558720067,0.004760924155937767,0.001517236217969787
18,0.6691904067993164,21.576283168792724,0.9404057480980558,0.9435759204576698,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",23,0.9303062302006336,0.9455746367239102,0.9545934530095037,0.9402906208718627,0.941921858500528,0.9461030383091149,0.9439746300211417,0.9461172741679873,0.9312169312169312,0.939794032215474,0.008687698933604495,1.0991988865306146,0.00897579577621925,0.0028960504855383494
19,0.604276466369629,21.714984273910524,0.9391377852916315,0.9421495292024913,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",25,0.9313621964097148,0.9453104359313078,0.9524815205913411,0.938441215323646,0.941921858500528,0.9442536327608982,0.9408033826638478,0.945324881141046,0.9291005291005291,0.9374174808555585,0.03896547962659835,1.2627515206140183,0.008364122985677737,0.0034826804748126663
20,0.7334056854248047,0.3088447093963623,0.6464497041420119,0.6387887001546947,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",51,0.6958817317845829,0.6758256274768825,0.5786694825765576,0.5809775429326288,0.6789862724392819,0.6660501981505944,0.6131078224101479,0.6183306920232435,0.6656084656084656,0.6527594401901241,0.008291164284382297,0.010830729507161725,0.04377024413079905,0.03484469782233146
21,0.6479236602783203,0.28352108001708987,0.6109467455621301,0.6137450042184698,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",52,0.5976768743400211,0.5939233817701454,0.6198521647307286,0.6184940554821664,0.5702217529039071,0.6002642007926023,0.6437632135306554,0.6362916006339144,0.6232804232804233,0.6197517824135199,0.008657566216344875,0.009605951841075612,0.025073868357563416,0.015110345195272592
22,0.6585185050964355,21.81399188041687,0.6665257819103972,0.6588695366767945,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",50,0.7011615628299894,0.704887714663144,0.6378035902851109,0.63223249669749,0.7022175290390708,0.6863936591809775,0.6596194503171248,0.6476492340200739,0.6317460317460317,0.6231845788222867,0.005784182197565214,1.0758596235247515,0.030186462187595846,0.03157243523218977
23,0.5961894035339356,22.02118091583252,0.7282333051563821,0.7221568367989104,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",49,0.7740232312565998,0.7749009247027742,0.6863780359028511,0.6694848084544254,0.7191129883843717,0.716776750330251,0.7293868921775899,0.7173798203909139,0.7322751322751323,0.732241880116187,0.01565436782751883,1.0219080593975678,0.02811368399471,0.033792764591304474
24,0.6433064937591553,0.20459418296813964,0.9273034657650042,0.9280430768427245,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",34,0.9102428722280888,0.9257595772787318,0.928194297782471,0.9257595772787318,0.9345300950369588,0.932892998678996,0.9365750528541226,0.9268357105124142,0.926984126984127,0.9289675204647478,0.012027509446387311,0.014637800962376303,0.009277150065589063,0.0026930581798884057
25,0.562418270111084,0.1954115867614746,0.9298393913778529,0.9298925521450794,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",33,0.9155227032734953,0.9323645970937913,0.9303062302006336,0.9278731836195508,0.9345300950369588,0.9336856010568032,0.9408033826638478,0.9276281035393555,0.928042328042328,0.9279112754158965,0.014974309841948074,0.011497855507786502,0.008375144035305277,0.002593424781351599
26,0.571903657913208,17.77406988143921,0.911665257819104,0.9130390812586342,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",41,0.8912354804646251,0.9151915455746368,0.928194297782471,0.9157199471598415,0.9165786694825766,0.9109643328929987,0.912262156448203,0.9112519809825673,0.91005291005291,0.9120675996831265,0.010994847261127315,1.4648017596705334,0.011984420381858983,0.002013068763897396
27,0.5116335868835449,17.54141764640808,0.9114539306846999,0.9145181451990114,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",42,0.8912354804646251,0.9143989431968296,0.928194297782471,0.9154557463672391,0.9176346356916578,0.9133421400264201,0.9101479915433404,0.9146856840993133,0.91005291005291,0.9147082123052548,0.008877267769900906,1.2166830502816397,0.012094234112712054,0.0006841765885994266
28,0.6361481666564941,0.24945340156555176,0.562552831783601,0.5577919943077969,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",56,0.6420274551214361,0.633553500660502,0.5047518479408659,0.504887714663144,0.5047518479408659,0.504887714663144,0.5052854122621564,0.5047543581616482,0.656084656084656,0.6408766833905466,0.007881947016774896,0.013670874871486723,0.07073866840538363,0.06489004216706705
29,0.5571437358856202,0.23174700736999512,0.5724852071005917,0.5716504874702846,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",55,0.6800422386483632,0.6700132100396301,0.5575501583949314,0.5561426684280053,0.614572333685322,0.6224570673712021,0.5052854122621564,0.5047543581616482,0.5047619047619047,0.5048851333509374,0.010645583002996273,0.009936867854984563,0.06732764715839834,0.0654671380634438
30,0.5711244106292724,17.608286714553834,0.5950972104818258,0.5924000789384518,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",53,0.6409714889123548,0.6351387054161163,0.5047518479408659,0.504887714663144,0.6441393875395988,0.631439894319683,0.5496828752642706,0.5525620707871104,0.635978835978836,0.6379720095062055,0.007237477114241291,1.180951341735174,0.05728931471790352,0.05417190974737851
31,0.5045686721801758,17.491838932037354,0.5798816568047337,0.5724959300066124,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",54,0.6019007391763463,0.5775429326287979,0.6304118268215417,0.6330250990752972,0.6568109820485745,0.6422721268163805,0.5052854122621564,0.5047543581616482,0.5047619047619047,0.5048851333509374,0.009533455980259994,1.2698938303751897,0.06349616460908201,0.059528330339915884
32,0.7364722728729248,0.23598604202270507,0.9346999154691462,0.9388205574044951,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",30,0.941921858500528,0.9392338177014531,0.9292502639915523,0.9357992073976222,0.9355860612460402,0.9376486129458388,0.9260042283298098,0.9418911780243,0.9407407407407408,0.9395299709532612,0.006832864613319861,0.009118582579069057,0.00624040725247822,0.002030013414989745
33,0.6510861396789551,0.23452420234680177,0.9380811496196112,0.9419377080996968,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",26,0.9461457233368532,0.9424042272126817,0.9345300950369588,0.9387054161162484,0.9366420274551215,0.9408190224570674,0.9323467230443975,0.9466455361859483,0.9407407407407408,0.9411143385265381,0.006128652390161331,0.009732298787091417,0.00489288588670074,0.002636603567462202
34,0.6649056434631347,21.641587829589845,0.9330092983939138,0.9399830827547477,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",31,0.9165786694825766,0.9408190224570674,0.938753959873284,0.936327608982827,0.9324181626187962,0.9418758256274768,0.9429175475687104,0.9416270470153196,0.9343915343915344,0.9392659096910483,0.00958796317732359,1.149479063691548,0.008983853277884354,0.0020425824320558297
35,0.5857817649841308,21.6418776512146,0.9357565511411665,0.9418320417614927,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",28,0.9229144667370645,0.9421400264200792,0.9429778247096093,0.9365918097754293,0.9313621964097148,0.9437252311756935,0.9460887949260042,0.9447966191230851,0.9354497354497354,0.9419065223131766,0.011822896628673528,1.047497218953507,0.008286498333297455,0.002826068585904229
36,0.7290329933166504,0.30448899269104,0.5156382079459002,0.5207088768395577,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",63,0.5163674762407603,0.5212681638044914,0.5131995776135164,0.512549537648613,0.5110876451953538,0.5157199471598415,0.514799154334038,0.5235076597992604,0.5227513227513227,0.5304990757855823,0.011006666026956668,0.01088330991551023,0.00396052713767018,0.006252331065281936
37,0.6508793830871582,0.284840726852417,0.5188081149619611,0.5229267402358484,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",62,0.5195353748680043,0.52443857331572,0.5163674762407603,0.5149273447820344,0.5047518479408659,0.5059445178335535,0.5158562367864693,0.5272054939249868,0.5375661375661376,0.5421177713229469,0.005454148087025215,0.009310234792217181,0.010623054605893436,0.012176003054592233
38,0.6791579246520996,22.096863174438475,0.5154268808114962,0.5192297012896105,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",64,0.5142555438225976,0.5178335535006605,0.5110876451953538,0.5112285336856011,0.5142555438225976,0.5186261558784676,0.514799154334038,0.5190174326465927,0.5227513227513227,0.5294428307367309,0.0342586370112,1.174732904125011,0.0038871240499326653,0.005842692013443782
39,0.5826169967651367,21.726588821411134,0.5272612003381234,0.5326500689920743,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",59,0.5395987328405492,0.5408190224570674,0.5364308342133052,0.5468956406869221,0.5100316789862724,0.5159841479524439,0.5169133192389006,0.5216587427363972,0.5333333333333333,0.5378927911275416,0.011512412065843265,0.9971192785298248,0.011639080302596933,0.011795901203163097
40,0.6394078254699707,0.19785714149475098,0.9186390532544378,0.9221262209420669,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",38,0.9134107708553326,0.9239101717305152,0.9229144667370645,0.9204755614266843,0.9155227032734953,0.9233817701453104,0.9112050739957717,0.9244585314315901,0.9301587301587302,0.9184050699762345,0.011982578430842874,0.012853366350695792,0.006972921193398913,0.002313879762785824
41,0.5614097595214844,0.1956934452056885,0.922865595942519,0.9265644035063584,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",36,0.9197465681098205,0.9299867899603699,0.925026399155227,0.9247027741083224,0.9186906019007391,0.9291941875825628,0.9207188160676533,0.9292128895932382,0.9301587301587302,0.9197253762872987,0.017527615749227312,0.016523142241922043,0.004232398805668574,0.003895662439152738
42,0.5731286525726318,17.45198049545288,0.9207523245984784,0.9245034280542734,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",37,0.9091869060190074,0.9284015852047556,0.9313621964097148,0.9199471598414796,0.914466737064414,0.9241743725231175,0.9238900634249472,0.9273639725303751,0.9248677248677248,0.9226300501716398,0.014409866091885336,1.189140446014719,0.007909119063321951,0.003090493362887278
43,0.5097538471221924,17.494709968566895,0.9230769230769231,0.9256128760111746,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",35,0.9091869060190074,0.9289299867899604,0.9355860612460402,0.921003963011889,0.9155227032734953,0.9252311756935271,0.927061310782241,0.9294770206022187,0.928042328042328,0.9234222339582783,0.009634137478107454,1.316174441614142,0.00945750979209281,0.003228669202957344
44,0.638108491897583,0.25035080909729,0.533178360101437,0.5425820649999271,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",58,0.545934530095037,0.550330250990753,0.5237592397043295,0.5291941875825628,0.5279831045406547,0.5421400264200793,0.5369978858350951,0.5480718436344427,0.5312169312169313,0.5431740163717983,0.00697642457073211,0.011645811798468705,0.007707542084845041,0.007347831270239162
45,0.5567032814025878,0.23464398384094237,0.536770921386306,0.545595460720563,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': 'word'}",57,0.542766631467793,0.5500660501981506,0.5448785638859557,0.550330250990753,0.5332629355860612,0.5418758256274769,0.5517970401691332,0.5655044902271527,0.5111111111111111,0.5202006865592818,0.012617426951199493,0.0115203521024216,0.014122332064982677,0.014815560097426319
46,0.5699284553527832,17.64445834159851,0.5264158918005072,0.533072901766616,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",60,0.5279831045406547,0.5233817701453104,0.53220696937698,0.5413474240422721,0.5216473072861668,0.5379128137384412,0.5253699788583509,0.5301109350237718,0.5248677248677248,0.532611565883285,0.010818827691475979,1.0609778192988746,0.0035286290654014114,0.006241739768202121
47,0.5030162811279297,17.4771475315094,0.5243026204564666,0.5306429799884747,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",61,0.5300950369588173,0.5273447820343461,0.515311510031679,0.5202113606340819,0.529039070749736,0.5482166446499339,0.5253699788583509,0.5332805071315373,0.5216931216931217,0.5241616054924743,0.009233017451657602,1.2143287525922721,0.005382398076029447,0.009772361500894016
48,0.7318872928619384,0.2387829303741455,0.9129332206255283,0.9107158863086241,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",40,0.8848996832101372,0.904887714663144,0.9303062302006336,0.9284015852047556,0.9155227032734953,0.9133421400264201,0.9154334038054969,0.9120443740095087,0.9185185185185185,0.8949036176392923,0.008242508661072073,0.010632596457426728,0.015049901092437073,0.011004012530041723
49,0.6481279373168946,0.23433499336242675,0.9131445477599324,0.9091295238082633,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",39,0.9208025343189018,0.9239101717305152,0.9239704329461457,0.9199471598414796,0.8954593453009504,0.8966974900924702,0.8953488372093024,0.8864236661384046,0.9301587301587302,0.9186691312384473,0.015660562963918007,0.00973817194886754,0.014795461084489233,0.0148094857919188
50,0.6563167572021484,21.65617561340332,0.8987743026204564,0.9030506448986344,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",43,0.928194297782471,0.9294583883751651,0.9102428722280888,0.9064729194187583,0.8162618796198522,0.8425363276089828,0.9112050739957717,0.9070258848388801,0.928042328042328,0.9297597042513863,0.008831357690875756,1.0793505746386114,0.04200028929132365,0.031938189865855955
51,0.5825166702270508,21.53996820449829,0.8797548605240912,0.8871480878095264,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",44,0.9208025343189018,0.9178335535006605,0.8827877507919747,0.8858652575957728,0.7961985216473073,0.8340819022457068,0.8657505285412262,0.8734812466983624,0.9333333333333333,0.9244784790071296,0.01276192760694865,1.0587568822376288,0.04846383524932992,0.03267905800740507
52,0.7227366447448731,0.3036662578582764,0.9319526627218935,0.9366011870578849,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",32,0.914466737064414,0.9225891677675033,0.9429778247096093,0.9389696169088507,0.9303062302006336,0.9402906208718627,0.9302325581395349,0.9397781299524565,0.9417989417989417,0.941378399788751,0.008416505498346466,0.00966711005150165,0.010296197979852165,0.007049436772565764
53,0.6993589878082276,0.27906036376953125,0.9406170752324599,0.9422020903665704,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",22,0.9366420274551215,0.9442536327608982,0.9450897571277719,0.9447820343461031,0.9355860612460402,0.9389696169088507,0.9376321353065539,0.9405705229793978,0.9481481481481482,0.9424346448376023,0.12315141821186287,0.008790975496135528,0.005033785767982851,0.002192255254708981
54,0.6467451095581055,21.582844305038453,0.9435756551141167,0.9406702421387955,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",20,0.9482576557550159,0.9408190224570674,0.9514255543822597,0.9437252311756935,0.9472016895459345,0.9445178335535006,0.9281183932346723,0.9329107237189646,0.9428571428571428,0.941378399788751,0.007762990358579396,0.960040077772251,0.008198694182324391,0.004119967637204713
55,0.5689275741577149,21.264971208572387,0.9351225697379544,0.9408279811999503,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': None, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",29,0.9355860612460402,0.9400264200792602,0.9376979936642027,0.9424042272126817,0.9324181626187962,0.938441215323646,0.9228329809725159,0.93608029582673,0.9470899470899471,0.9471877475574333,0.007306463346454682,1.1152629228677837,0.007850437505799373,0.0037897453105982326
56,0.6215149402618408,0.19404354095458984,0.8571428571428571,0.8774816454604419,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",45,0.8616684266103485,0.8782034346103038,0.8521647307286166,0.8694848084544253,0.8289334741288279,0.8655217965653897,0.8625792811839323,0.8885367142102483,0.8804232804232804,0.8856614734618431,0.010597328663776879,0.01205277827218315,0.016806448705454124,0.00890654252182728
57,0.5437368869781494,0.19042186737060546,0.856508875739645,0.873519652228015,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",46,0.8732840549102429,0.885336856010568,0.8585005279831045,0.8718626155878467,0.8099260823653643,0.8488771466314399,0.8636363636363636,0.8824617010036978,0.8772486772486773,0.8790599419065224,0.016403858300030754,0.01156276288638228,0.024237034740922814,0.013117165881172253
58,0.5603921413421631,17.059161901474,0.7897295012679628,0.8296687397246878,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",48,0.795142555438226,0.839894319682959,0.7824709609292503,0.8161162483487451,0.750791974656811,0.8155878467635402,0.7875264270613108,0.8343898573692552,0.8328042328042328,0.8423554264589385,0.013020099670484895,1.1469844219632905,0.026293234788493536,0.011573634059085784
59,0.5001174926757812,17.015211439132692,0.8007185122569738,0.8351636000626241,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",47,0.7888067581837381,0.83778071334214,0.7888067581837381,0.8269484808454426,0.7793030623020063,0.8335535006605019,0.806553911205074,0.8262017960908611,0.8402116402116402,0.8513335093741748,0.009980544476927278,1.1602110586973589,0.021606986466518357,0.00915106314399721
60,0.6224361896514893,0.24375767707824708,0.9420963651732882,0.946111592336474,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",21,0.9535374868004224,0.9542932628797887,0.9482576557550159,0.9445178335535006,0.9345300950369588,0.9418758256274768,0.9249471458773785,0.9416270470153196,0.9492063492063492,0.9482439926062847,0.008904098868122658,0.009651791494794273,0.010683642377476807,0.004734549549827785
61,0.5515237808227539,0.22844905853271485,0.9492814877430262,0.949387012352536,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': 'word'}",19,0.9493136219640972,0.9529722589167767,0.955649419218585,0.9516512549537649,0.9450897571277719,0.9437252311756935,0.9418604651162791,0.9463814051769678,0.9544973544973545,0.9522049115394772,0.012818393966833144,0.010135605182364532,0.00529853489062568,0.003660895625380722
62,0.5583781242370606,17.108984231948853,0.9395604395604396,0.9402472416550645,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,3,"{'vect__min_df': 3, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",24,0.9429778247096093,0.9431968295904888,0.9440337909186906,0.9334214002642008,0.9334741288278775,0.9421400264200792,0.9376321353065539,0.9440042260961437,0.9396825396825397,0.9384737259044098,0.008584702727783153,1.2045032889026777,0.0038080918906910526,0.003902181545162422
63,0.49754109382629397,17.08700304031372,0.9368131868131868,0.9412513023345408,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001BCF3DDAB70>,5,"{'vect__min_df': 5, 'import__remove': ['headers', 'footers'], 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'vect__analyzer': <function stem_rmv_punc at 0x000001BCF3DDAB70>}",27,0.938753959873284,0.9439894319682959,0.9408658922914467,0.9376486129458388,0.9313621964097148,0.9429326287978864,0.9376321353065539,0.9442683571051241,0.9354497354497354,0.9374174808555585,0.009432661466878827,1.195276363083521,0.003239215934271969,0.0030693448819077165
