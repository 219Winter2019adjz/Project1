,mean_fit_time,mean_score_time,mean_test_score,mean_train_score,param_clf,param_import__remove,param_reduce_dim,param_vect__analyzer,param_vect__min_df,params,rank_test_score,split0_test_score,split0_train_score,split1_test_score,split1_train_score,split2_test_score,split2_train_score,split3_test_score,split3_train_score,split4_test_score,split4_train_score,std_fit_time,std_score_time,std_test_score,std_train_score
0,7.947792482376099,0.2364428997039795,0.974218089602705,0.9784445085209319,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",2,0.9672650475184794,0.978335535006605,0.9746568109820486,0.978335535006605,0.9757127771911299,0.9767503302509908,0.9735729386892178,0.9799260433174855,0.9798941798941799,0.9788750990229733,0.12732766688821415,0.007711540408188177,0.004083869115829565,0.0010270680598516778
1,5.604999160766601,0.23344650268554687,0.9725274725274725,0.9778105661711883,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",5,0.9683210137275607,0.9785997357992074,0.9725448785638859,0.9770145310435931,0.9757127771911299,0.9767503302509908,0.96723044397463,0.9783412572636028,0.9788359788359788,0.9783469764985476,0.07937104647400174,0.009916082947386759,0.004373635731122801,0.0007681054494659166
2,89.93040900230407,21.21855182647705,0.9748520710059172,0.9784973905275131,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",1,0.9714889123548046,0.9791281373844122,0.9809926082365364,0.9762219286657859,0.9767687434002112,0.978335535006605,0.9682875264270613,0.9807184363444268,0.9767195767195768,0.9780829152363348,1.3053567120839387,1.1058313322247488,0.0044560413373019745,0.001463324965900496
3,88.78093886375427,21.235935497283936,0.9737954353338969,0.978127495483258,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",3,0.9725448785638859,0.978335535006605,0.9778247096092925,0.9759577278731836,0.9778247096092925,0.9780713342140026,0.9640591966173362,0.9793977812995246,0.9767195767195768,0.9788750990229733,1.2022664039673974,1.1035190143417668,0.005241141186070797,0.001177018531780179
4,11.019164323806763,0.30666699409484866,0.9634404057480981,0.9602177516713667,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",11,0.9609292502639916,0.9616908850726552,0.9598732840549102,0.9590488771466315,0.9651531151003168,0.9603698811096433,0.9534883720930233,0.9609086106708927,0.9777777777777777,0.9590705043570108,2.412776340515728,0.008313969488603074,0.008077559326456011,0.0010346975979560582
5,7.839155673980713,0.28266382217407227,0.9647083685545224,0.9628064729489945,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",8,0.9662090813093981,0.9653896961690885,0.9630411826821542,0.9635402906208719,0.9630411826821542,0.9611624834874505,0.9619450317124736,0.9603803486529319,0.9693121693121693,0.963559545814629,2.187279613683475,0.010444489047402567,0.0027060132801421705,0.0018092777437950585
6,13.425836992263793,21.229556179046632,0.9647083685545224,0.9641801356552222,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",8,0.9588173178458289,0.9682959048877147,0.9672650475184794,0.9622192866578599,0.9672650475184794,0.9638044914134742,0.9608879492600423,0.962229265715795,0.9693121693121693,0.9643517296012675,2.025558988689312,1.1116893504291636,0.004088056894309912,0.0022253508381748044
7,9.670569133758544,21.238367557525635,0.9611158072696534,0.9650786555480473,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': None}",12,0.9567053854276664,0.9677675033025099,0.9619852164730729,0.9672391017173052,0.9630411826821542,0.9659180977542933,0.959830866807611,0.9624933967247755,0.964021164021164,0.961975178241352,1.3123691882225792,1.1358259371751869,0.0026080226365017916,0.002404879526755721
8,6.780365037918091,0.20006279945373534,0.9727387996618766,0.9759085855906185,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",4,0.9662090813093981,0.9780713342140026,0.9757127771911299,0.9735799207397622,0.9736008447729673,0.9743725231175694,0.9682875264270613,0.9770206022187005,0.9798941798941799,0.9764985476630579,0.044139569913731656,0.010798057343391013,0.004963611223903571,0.001675964542866049
9,4.652216291427612,0.19384160041809081,0.9718934911242604,0.9751161088085892,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",6,0.9683210137275607,0.9772787318361955,0.9746568109820486,0.9738441215323645,0.9714889123548046,0.9727873183619551,0.9682875264270613,0.9756999471737982,0.9767195767195768,0.9759704251386322,0.09520605117016855,0.010152019295939905,0.0033713316342726717,0.0015993047591508504
10,72.42842044830323,17.081669807434082,0.9640743871513102,0.9683537406911743,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",10,0.9609292502639916,0.9696169088507266,0.9736008447729673,0.9648612945838837,0.9598732840549102,0.9709379128137384,0.959830866807611,0.9672477548864237,0.9661375661375662,0.9691048323210985,1.3066408773968383,1.1804139541527525,0.0053032029798517595,0.0021098844711275352
11,71.52421412467956,17.036617708206176,0.9651310228233305,0.9678784722967352,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",7,0.9630411826821542,0.9696169088507266,0.9714889123548046,0.9667107001321004,0.9588173178458289,0.9701453104359313,0.9630021141649049,0.9659270998415214,0.9693121693121693,0.9669923422233958,1.112324919774409,1.2065349230999907,0.0046193764006676255,0.0016803267298895978
12,9.525084257125854,0.24685173034667968,0.959636517328825,0.9598482891528921,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",14,0.9482576557550159,0.9598414795244385,0.9662090813093981,0.9566710700132101,0.9630411826821542,0.9667107001321004,0.9566596194503171,0.9609086106708927,0.964021164021164,0.9551095854238183,2.015396220643335,0.010876720148360646,0.006518289955308918,0.0040191304291757645
13,8.859363460540772,0.23004794120788574,0.9602704987320372,0.9623306603233838,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",13,0.9482576557550159,0.9614266842800528,0.9746568109820486,0.9614266842800528,0.955649419218585,0.9608982826948481,0.9513742071881607,0.9635499207606973,0.9714285714285714,0.9643517296012675,1.5304232944183822,0.009881288102355305,0.01073586471295937,0.0013606886553922113
14,11.487347269058228,17.10289559364319,0.9556213017751479,0.9578930917001772,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",15,0.9440337909186906,0.9608982826948481,0.9662090813093981,0.9540290620871863,0.9535374868004224,0.9587846763540291,0.9492600422832981,0.9582673005810882,0.9650793650793651,0.9574861367837338,1.0446022163374773,1.1613580663651903,0.008725180422505877,0.002238859778998054
15,7.883968448638916,17.070441722869873,0.9547759932375317,0.957628974647921,"LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LinearSVC(C=10, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=100000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0), 'import__remove': ['headers', 'footers']}",17,0.9461457233368532,0.9627476882430648,0.9662090813093981,0.9537648612945839,0.9535374868004224,0.9574636723910172,0.9471458773784355,0.9566825145272055,0.9608465608465608,0.9574861367837338,1.0329711895320048,1.1464354676012591,0.007769856645560791,0.002900900381889574
16,0.7407642841339112,0.23544702529907227,0.9551986475063398,0.9569421781755617,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",16,0.9503695881731784,0.9587846763540291,0.955649419218585,0.9571994715984148,0.955649419218585,0.9561426684280053,0.9566596194503171,0.9558901215002641,0.9576719576719577,0.9566939529970954,0.00801385457363466,0.009545332895002766,0.0025291499421510205,0.0010265139323749732
17,0.6526339530944825,0.23086605072021485,0.952240067624683,0.9551986901792173,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",18,0.9461457233368532,0.9577278731836195,0.9472016895459345,0.9553500660501981,0.9535374868004224,0.9537648612945839,0.9577167019027484,0.9535129424194401,0.9566137566137566,0.955637707948244,0.00904637414415345,0.008738615720456495,0.004760924155937767,0.001517236217969787
18,0.6467417716979981,21.152503490447998,0.9404057480980558,0.9435759204576698,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",23,0.9303062302006336,0.9455746367239102,0.9545934530095037,0.9402906208718627,0.941921858500528,0.9461030383091149,0.9439746300211417,0.9461172741679873,0.9312169312169312,0.939794032215474,0.006801779907099365,1.0945470897382443,0.00897579577621925,0.0028960504855383494
19,0.576878023147583,21.147557973861694,0.9391377852916315,0.9421495292024913,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",25,0.9313621964097148,0.9453104359313078,0.9524815205913411,0.938441215323646,0.941921858500528,0.9442536327608982,0.9408033826638478,0.945324881141046,0.9291005291005291,0.9374174808555585,0.010438673034849728,1.1085304690068867,0.008364122985677737,0.0034826804748126663
20,0.7389984607696534,0.3060320854187012,0.6464497041420119,0.6387887001546947,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",51,0.6958817317845829,0.6758256274768825,0.5786694825765576,0.5809775429326288,0.6789862724392819,0.6660501981505944,0.6131078224101479,0.6183306920232435,0.6656084656084656,0.6527594401901241,0.008521450633713153,0.009430972607224341,0.04377024413079905,0.03484469782233146
21,0.6505425930023193,0.2810560703277588,0.6109467455621301,0.6137450042184698,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",52,0.5976768743400211,0.5939233817701454,0.6198521647307286,0.6184940554821664,0.5702217529039071,0.6002642007926023,0.6437632135306554,0.6362916006339144,0.6232804232804233,0.6197517824135199,0.012755819246386713,0.008560062801440877,0.025073868357563416,0.015110345195272592
22,0.6437439918518066,21.30157780647278,0.6665257819103972,0.6588695366767945,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",50,0.7011615628299894,0.704887714663144,0.6378035902851109,0.63223249669749,0.7022175290390708,0.6863936591809775,0.6596194503171248,0.6476492340200739,0.6317460317460317,0.6231845788222867,0.007447231866154728,1.1662794828645042,0.030186462187595846,0.03157243523218977
23,0.5673251152038574,21.198755264282227,0.7282333051563821,0.7221568367989104,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",49,0.7740232312565998,0.7749009247027742,0.6863780359028511,0.6694848084544254,0.7191129883843717,0.716776750330251,0.7293868921775899,0.7173798203909139,0.7322751322751323,0.732241880116187,0.010533212904551843,1.1134548446308081,0.02811368399471,0.033792764591304474
24,0.6369259357452393,0.19564299583435057,0.9273034657650042,0.9280430768427245,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",34,0.9102428722280888,0.9257595772787318,0.928194297782471,0.9257595772787318,0.9345300950369588,0.932892998678996,0.9365750528541226,0.9268357105124142,0.926984126984127,0.9289675204647478,0.012172497506067368,0.0114990290867313,0.009277150065589063,0.0026930581798884057
25,0.5565244197845459,0.19204349517822267,0.9298393913778529,0.9298925521450794,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",33,0.9155227032734953,0.9323645970937913,0.9303062302006336,0.9278731836195508,0.9345300950369588,0.9336856010568032,0.9408033826638478,0.9276281035393555,0.928042328042328,0.9279112754158965,0.012438178549586206,0.009941837706815376,0.008375144035305277,0.002593424781351599
26,0.5588979721069336,17.02442479133606,0.911665257819104,0.9130390812586342,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",41,0.8912354804646251,0.9151915455746368,0.928194297782471,0.9157199471598415,0.9165786694825766,0.9109643328929987,0.912262156448203,0.9112519809825673,0.91005291005291,0.9120675996831265,0.0128712287003573,1.1753462056958706,0.011984420381858983,0.002013068763897396
27,0.49370660781860354,17.018653774261473,0.9114539306846999,0.9145181451990114,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",42,0.8912354804646251,0.9143989431968296,0.928194297782471,0.9154557463672391,0.9176346356916578,0.9133421400264201,0.9101479915433404,0.9146856840993133,0.91005291005291,0.9147082123052548,0.009289591962505154,1.176018275872927,0.012094234112712054,0.0006841765885994266
28,0.6301375389099121,0.24645557403564453,0.562552831783601,0.5577919943077969,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",56,0.6420274551214361,0.633553500660502,0.5047518479408659,0.504887714663144,0.5047518479408659,0.504887714663144,0.5052854122621564,0.5047543581616482,0.656084656084656,0.6408766833905466,0.009189744297716965,0.009564441110886739,0.07073866840538363,0.06489004216706705
29,0.5567267894744873,0.2282477378845215,0.5724852071005917,0.5716504874702846,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",55,0.6800422386483632,0.6700132100396301,0.5575501583949314,0.5561426684280053,0.614572333685322,0.6224570673712021,0.5052854122621564,0.5047543581616482,0.5047619047619047,0.5048851333509374,0.014166183027165569,0.010416244713502928,0.06732764715839834,0.0654671380634438
30,0.5657248973846436,17.09045777320862,0.5950972104818258,0.5924000789384518,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",53,0.6409714889123548,0.6351387054161163,0.5047518479408659,0.504887714663144,0.6441393875395988,0.631439894319683,0.5496828752642706,0.5525620707871104,0.635978835978836,0.6379720095062055,0.010745162955005143,1.1640831397171192,0.05728931471790352,0.05417190974737851
31,0.5174456596374511,17.73997106552124,0.5798816568047337,0.5724959300066124,"LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l1', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",54,0.6019007391763463,0.5775429326287979,0.6304118268215417,0.6330250990752972,0.6568109820485745,0.6422721268163805,0.5052854122621564,0.5047543581616482,0.5047619047619047,0.5048851333509374,0.02139989143376075,1.4872455245045908,0.06349616460908201,0.059528330339915884
32,0.763773250579834,0.24785213470458983,0.9346999154691462,0.9388205574044951,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",30,0.941921858500528,0.9392338177014531,0.9292502639915523,0.9357992073976222,0.9355860612460402,0.9376486129458388,0.9260042283298098,0.9418911780243,0.9407407407407408,0.9395299709532612,0.015139365823540592,0.014843550228278492,0.00624040725247822,0.002030013414989745
33,0.6651724815368653,0.24182939529418945,0.9380811496196112,0.9419377080996968,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",26,0.9461457233368532,0.9424042272126817,0.9345300950369588,0.9387054161162484,0.9366420274551215,0.9408190224570674,0.9323467230443975,0.9466455361859483,0.9407407407407408,0.9411143385265381,0.008462070065837005,0.007582730073312968,0.00489288588670074,0.002636603567462202
34,0.67154860496521,21.756881999969483,0.9330092983939138,0.9399830827547477,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",31,0.9165786694825766,0.9408190224570674,0.938753959873284,0.936327608982827,0.9324181626187962,0.9418758256274768,0.9429175475687104,0.9416270470153196,0.9343915343915344,0.9392659096910483,0.018902693100252665,1.0857619355850665,0.008983853277884354,0.0020425824320558297
35,0.5909288883209228,22.240813493728638,0.9357565511411665,0.9418320417614927,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",28,0.9229144667370645,0.9421400264200792,0.9429778247096093,0.9365918097754293,0.9313621964097148,0.9437252311756935,0.9460887949260042,0.9447966191230851,0.9354497354497354,0.9419065223131766,0.010246413111535221,1.2474420947049065,0.008286498333297455,0.002826068585904229
36,0.7519515037536622,0.3088654041290283,0.5156382079459002,0.5207088768395577,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",63,0.5163674762407603,0.5212681638044914,0.5131995776135164,0.512549537648613,0.5110876451953538,0.5157199471598415,0.514799154334038,0.5235076597992604,0.5227513227513227,0.5304990757855823,0.004723910285264626,0.009160614635680847,0.00396052713767018,0.006252331065281936
37,0.6613465309143066,0.28986096382141113,0.5188081149619611,0.5229267402358484,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",62,0.5195353748680043,0.52443857331572,0.5163674762407603,0.5149273447820344,0.5047518479408659,0.5059445178335535,0.5158562367864693,0.5272054939249868,0.5375661375661376,0.5421177713229469,0.009581668204805728,0.009171552156808201,0.010623054605893436,0.012176003054592233
38,0.6615027904510498,21.92911868095398,0.5154268808114962,0.5192297012896105,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",64,0.5142555438225976,0.5178335535006605,0.5110876451953538,0.5112285336856011,0.5142555438225976,0.5186261558784676,0.514799154334038,0.5190174326465927,0.5227513227513227,0.5294428307367309,0.01296607251296836,1.280660332278367,0.0038871240499326653,0.005842692013443782
39,0.6081340312957764,22.46303758621216,0.5272612003381234,0.5326500689920743,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': None}",59,0.5395987328405492,0.5408190224570674,0.5364308342133052,0.5468956406869221,0.5100316789862724,0.5159841479524439,0.5169133192389006,0.5216587427363972,0.5333333333333333,0.5378927911275416,0.014641513472486316,1.1974250349208662,0.011639080302596933,0.011795901203163097
40,0.6675517559051514,0.20824499130249025,0.9186390532544378,0.9221262209420669,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",38,0.9134107708553326,0.9239101717305152,0.9229144667370645,0.9204755614266843,0.9155227032734953,0.9233817701453104,0.9112050739957717,0.9244585314315901,0.9301587301587302,0.9184050699762345,0.015373068999756252,0.011378143508817736,0.006972921193398913,0.002313879762785824
41,0.5843355178833007,0.20924296379089355,0.922865595942519,0.9265644035063584,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",36,0.9197465681098205,0.9299867899603699,0.925026399155227,0.9247027741083224,0.9186906019007391,0.9291941875825628,0.9207188160676533,0.9292128895932382,0.9301587301587302,0.9197253762872987,0.015568829928560705,0.007358188728378935,0.004232398805668574,0.003895662439152738
42,0.589134407043457,18.050045204162597,0.9207523245984784,0.9245034280542734,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",37,0.9091869060190074,0.9284015852047556,0.9313621964097148,0.9199471598414796,0.914466737064414,0.9241743725231175,0.9238900634249472,0.9273639725303751,0.9248677248677248,0.9226300501716398,0.0179832223253443,1.243865368712889,0.007909119063321951,0.003090493362887278
43,0.524919080734253,17.96922698020935,0.9230769230769231,0.9256128760111746,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",35,0.9091869060190074,0.9289299867899604,0.9355860612460402,0.921003963011889,0.9155227032734953,0.9252311756935271,0.927061310782241,0.9294770206022187,0.928042328042328,0.9234222339582783,0.010460197882630192,1.2676973127152515,0.00945750979209281,0.003228669202957344
44,0.6785521984100342,0.2764613628387451,0.533178360101437,0.5425820649999271,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",58,0.545934530095037,0.550330250990753,0.5237592397043295,0.5291941875825628,0.5279831045406547,0.5421400264200793,0.5369978858350951,0.5480718436344427,0.5312169312169313,0.5431740163717983,0.043242670811877264,0.029055666807618247,0.007707542084845041,0.007347831270239162
45,0.5802369117736816,0.24385037422180175,0.536770921386306,0.545595460720563,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",57,0.542766631467793,0.5500660501981506,0.5448785638859557,0.550330250990753,0.5332629355860612,0.5418758256274769,0.5517970401691332,0.5655044902271527,0.5111111111111111,0.5202006865592818,0.021652684009793033,0.00987479951368011,0.014122332064982677,0.014815560097426319
46,0.569364595413208,17.45896725654602,0.5264158918005072,0.533072901766616,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",60,0.5279831045406547,0.5233817701453104,0.53220696937698,0.5413474240422721,0.5216473072861668,0.5379128137384412,0.5253699788583509,0.5301109350237718,0.5248677248677248,0.532611565883285,0.011433994427611041,1.1486438724385062,0.0035286290654014114,0.006241739768202121
47,0.5109565258026123,17.67567820549011,0.5243026204564666,0.5306429799884747,"LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=42, solver='liblinear',
          tol=0.0001, verbose=0, warm_start=False), 'import__remove': ['headers', 'footers']}",61,0.5300950369588173,0.5273447820343461,0.515311510031679,0.5202113606340819,0.529039070749736,0.5482166446499339,0.5253699788583509,0.5332805071315373,0.5216931216931217,0.5241616054924743,0.014434228813796187,1.2544746360522816,0.005382398076029447,0.009772361500894016
48,0.7526991367340088,0.24405331611633302,0.9129332206255283,0.9107158863086241,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",40,0.8848996832101372,0.904887714663144,0.9303062302006336,0.9284015852047556,0.9155227032734953,0.9133421400264201,0.9154334038054969,0.9120443740095087,0.9185185185185185,0.8949036176392923,0.006416978739249159,0.00971255287856294,0.015049901092437073,0.011004012530041723
49,0.6636410236358643,0.2447502613067627,0.9131445477599324,0.9091295238082633,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",39,0.9208025343189018,0.9239101717305152,0.9239704329461457,0.9199471598414796,0.8954593453009504,0.8966974900924702,0.8953488372093024,0.8864236661384046,0.9301587301587302,0.9186691312384473,0.010535526262469981,0.009692716273497388,0.014795461084489233,0.0148094857919188
50,0.6659507751464844,22.129465913772584,0.8987743026204564,0.9030506448986344,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",43,0.928194297782471,0.9294583883751651,0.9102428722280888,0.9064729194187583,0.8162618796198522,0.8425363276089828,0.9112050739957717,0.9070258848388801,0.928042328042328,0.9297597042513863,0.010181674573724703,1.1154070027652554,0.04200028929132365,0.031938189865855955
51,0.6085858821868897,23.3050106048584,0.8797548605240912,0.8871480878095264,"GaussianNB(priors=None, var_smoothing=1e-09)",,"TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",44,0.9208025343189018,0.9178335535006605,0.8827877507919747,0.8858652575957728,0.7961985216473073,0.8340819022457068,0.8657505285412262,0.8734812466983624,0.9333333333333333,0.9244784790071296,0.03908943933334639,2.9005632855210597,0.04846383524932992,0.03267905800740507
52,0.7475958824157715,0.3141322612762451,0.9319526627218935,0.9366011870578849,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",32,0.914466737064414,0.9225891677675033,0.9429778247096093,0.9389696169088507,0.9303062302006336,0.9402906208718627,0.9302325581395349,0.9397781299524565,0.9417989417989417,0.941378399788751,0.007359239699652193,0.007959205518186933,0.010296197979852165,0.007049436772565764
53,0.6576085567474366,0.29228620529174804,0.9406170752324599,0.9422020903665704,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",22,0.9366420274551215,0.9442536327608982,0.9450897571277719,0.9447820343461031,0.9355860612460402,0.9389696169088507,0.9376321353065539,0.9405705229793978,0.9481481481481482,0.9424346448376023,0.007204357015113305,0.009033446549807839,0.005033785767982851,0.002192255254708981
54,0.6628905296325683,21.818026065826416,0.9435756551141167,0.9406702421387955,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",20,0.9482576557550159,0.9408190224570674,0.9514255543822597,0.9437252311756935,0.9472016895459345,0.9445178335535006,0.9281183932346723,0.9329107237189646,0.9428571428571428,0.941378399788751,0.01412256160662068,1.051789522785728,0.008198694182324391,0.004119967637204713
55,0.6236487865447998,22.61042437553406,0.9351225697379544,0.9408279811999503,"GaussianNB(priors=None, var_smoothing=1e-09)",,"NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': None}",29,0.9355860612460402,0.9400264200792602,0.9376979936642027,0.9424042272126817,0.9324181626187962,0.938441215323646,0.9228329809725159,0.93608029582673,0.9470899470899471,0.9471877475574333,0.01743006493351353,0.8166229974847861,0.007850437505799373,0.0037897453105982326
56,0.7125306606292725,0.21021499633789062,0.8571428571428571,0.8774816454604419,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",45,0.8616684266103485,0.8782034346103038,0.8521647307286166,0.8694848084544253,0.8289334741288279,0.8655217965653897,0.8625792811839323,0.8885367142102483,0.8804232804232804,0.8856614734618431,0.008579251976371225,0.008423113862854414,0.016806448705454124,0.00890654252182728
57,0.6255314826965332,0.20548787117004394,0.856508875739645,0.873519652228015,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",46,0.8732840549102429,0.885336856010568,0.8585005279831045,0.8718626155878467,0.8099260823653643,0.8488771466314399,0.8636363636363636,0.8824617010036978,0.8772486772486773,0.8790599419065224,0.016184642711091927,0.017177583722704916,0.024237034740922814,0.013117165881172253
58,0.6423505783081055,17.885293102264406,0.7897295012679628,0.8296687397246878,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",48,0.795142555438226,0.839894319682959,0.7824709609292503,0.8161162483487451,0.750791974656811,0.8155878467635402,0.7875264270613108,0.8343898573692552,0.8328042328042328,0.8423554264589385,0.021821820107915463,1.466868813850479,0.026293234788493536,0.011573634059085784
59,0.582334566116333,18.195419692993163,0.8007185122569738,0.8351636000626241,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': TruncatedSVD(algorithm='randomized', n_components=50, n_iter=5,
       random_state=42, tol=0.0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",47,0.7888067581837381,0.83778071334214,0.7888067581837381,0.8269484808454426,0.7793030623020063,0.8335535006605019,0.806553911205074,0.8262017960908611,0.8402116402116402,0.8513335093741748,0.014483146823298071,1.2554269883738423,0.021606986466518357,0.00915106314399721
60,0.6645601272583008,0.25446014404296874,0.9420963651732882,0.946111592336474,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,3,"{'vect__min_df': 3, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",21,0.9535374868004224,0.9542932628797887,0.9482576557550159,0.9445178335535006,0.9345300950369588,0.9418758256274768,0.9249471458773785,0.9416270470153196,0.9492063492063492,0.9482439926062847,0.009459665701755163,0.0118785541869683,0.010683642377476807,0.004734549549827785
61,0.5893318176269531,0.23945393562316894,0.9492814877430262,0.949387012352536,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",word,5,"{'vect__min_df': 5, 'vect__analyzer': 'word', 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",19,0.9493136219640972,0.9529722589167767,0.955649419218585,0.9516512549537649,0.9450897571277719,0.9437252311756935,0.9418604651162791,0.9463814051769678,0.9544973544973545,0.9522049115394772,0.017391104416014484,0.013778715069610283,0.00529853489062568,0.003660895625380722
62,0.5925994873046875,17.658220052719116,0.9395604395604396,0.9402472416550645,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,3,"{'vect__min_df': 3, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",24,0.9429778247096093,0.9431968295904888,0.9440337909186906,0.9334214002642008,0.9334741288278775,0.9421400264200792,0.9376321353065539,0.9440042260961437,0.9396825396825397,0.9384737259044098,0.008596602631929368,1.0941123533640003,0.0038080918906910526,0.003902181545162422
63,0.529612398147583,17.439820718765258,0.9368131868131868,0.9412513023345408,"GaussianNB(priors=None, var_smoothing=1e-09)","['headers', 'footers']","NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0)",<function stem_rmv_punc at 0x000001DD34916268>,5,"{'vect__min_df': 5, 'vect__analyzer': <function stem_rmv_punc at 0x000001DD34916268>, 'reduce_dim': NMF(alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200,
  n_components=50, random_state=42, shuffle=False, solver='cd', tol=0.0001,
  verbose=0), 'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'import__remove': ['headers', 'footers']}",27,0.938753959873284,0.9439894319682959,0.9408658922914467,0.9376486129458388,0.9313621964097148,0.9429326287978864,0.9376321353065539,0.9442683571051241,0.9354497354497354,0.9374174808555585,0.019547744485270736,1.2020204348069765,0.003239215934271969,0.0030693448819077165
